import Head from "next/head"
import { Box, Container, Heading } from "@chakra-ui/react"
import jsonContracts from "./contracts.json"

import { useAccount } from "wagmi"

import { getContract } from "@wagmi/core"
import { useEffect, useState } from "react"
import { fetchSigner } from "@wagmi/core"
import { Event as EtherEvent } from "ethers"
import {
  Collection,
  Contracts,
  fetchCollections,
  fetchToken,
} from "@/lib/tokenInventory"
import Account from "../components/Account"
import Inventory from "../components/Inventory"
import Mint from "../components/Mint"
import Exchange from "../components/Exchange"

const Home = () => {
  const { address, isConnected } = useAccount()

  const [contracts, setContracts] = useState({} as Contracts)
  const { smokeBond, supportTicket, gardenTicket } = contracts

  const [totalSupply, setTotalSupply] = useState<EtherEvent[]>([])
  const [inventory, setInventory] = useState<Collection[]>([])

  // FETCH CONTRACT and Tokens
  useEffect(() => {
    ; (async () => {
      const signer = await fetchSigner()
      if (signer) {
        let _contracts = {} as Contracts

        _contracts.smokeBond = getContract({
          address: jsonContracts.smokeBond,
          abi: jsonContracts.abi,
          signerOrProvider: signer,
        })

        _contracts.supportTicket = getContract({
          address: jsonContracts.supportTicket,
          abi: jsonContracts.abi,
          signerOrProvider: signer,
        })

        _contracts.gardenTicket = getContract({
          address: jsonContracts.gardenTicket,
          abi: jsonContracts.abi,
          signerOrProvider: signer,
        })

        setContracts(_contracts)
        setTotalSupply(await fetchCollections(_contracts))
      }
    })()
  }, [isConnected])

  // FETCH INVENTORY
  useEffect(() => {
    ; (async () => {
      if (smokeBond && supportTicket && gardenTicket && address) {
        const inventory: Collection[] = []
        inventory.push(await fetchToken(supportTicket, address))
        inventory.push(await fetchToken(gardenTicket, address))
        inventory.push(await fetchToken(smokeBond, address))
        setInventory(inventory)
      }
    })()
  }, [smokeBond, supportTicket, gardenTicket, address])

  return (
    <>
      <Head>
        <title>NST dApp</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Box
        minH="100vh"
        bgGradient="linear-gradient(230deg,rgba(200,45,12,.1),rgba(200,245,12,.1))"
        as="main"
      >
        <Container fontFamily="monospace" maxW="container.xl">
          <Heading as="h1" fontFamily="monospace" textAlign="center" p="5">
            NST dApp
          </Heading>

          {/* ACCOUNT */}
          <Account />

          {/* NST BALANCES */}
          {address && <Inventory inventory={inventory} />}

          {/* MINT TOKEN */}
          {address && <Mint address={address} contracts={contracts} />}

          {/* PERFORM AN EXCHANGE */}
          {address && (
            <Exchange
              contracts={contracts}
              address={address}
              inventory={inventory}
              totalSupply={totalSupply}
            />
          )}
        </Container>
      </Box>
    </>
  )
}

export default Home
